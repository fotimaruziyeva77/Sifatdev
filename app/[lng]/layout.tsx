import type { Metadata } from 'next'
import { Crete_Round, Work_Sans, Roboto } from 'next/font/google'
import './globals.css'
import { ChildrenProps } from '@/types'
import { languages } from '@/i18n/settings'
import { dir } from 'i18next'
import ClientWrapper from '@/components/client-wrapper'
import LayoutWrapper from './(root)/_components/layout-wrapper'
const creteRound = Crete_Round({
	weight: ['400'],
	variable: '--font-creteRound',
	subsets: ['latin'],
})

const workSans = Work_Sans({
	weight: ['500', '600'],
	variable: '--font-workSans',
	subsets: ['latin'],
})
const roboto = Roboto({
	subsets: ['latin'],
	weight: ['400', '500', '700'],
	variable: '--font-roboto',
})
export async function generateStaticParams() {
	return languages.map(lng => ({ lng }))
}
export const metadata: Metadata = {
	title: 'Sifatdev',
	description: 'Generated by create next app',
	icons: {
		icon: '/assets/logo.png',
	},
}
interface Props extends ChildrenProps {
	params: Promise<{ lng: string }>
}

export default async function RootLayout({ children, params }: Props) {
	const { lng } = await params
	return (
		<html lang={lng} dir={dir(lng)} suppressHydrationWarning>
			<body
				className={`${creteRound.variable} ${workSans.variable}${roboto.className} antialiased`}
				suppressHydrationWarning
			>
				<div className='overflow-hidden w-full'>
					<ClientWrapper>
						<LayoutWrapper>{children}</LayoutWrapper>
					</ClientWrapper>
				</div>
			</body>
		</html>
	)
}
